{
	"properties": {},
	"description": "",
	"processes": {
		"sapvoraclient1": {
			"component": "com.sap.vora.client",
			"metadata": {
				"label": "SAP Vora Client",
				"x": 184,
				"y": 132,
				"height": 80,
				"width": 120,
				"config": {
					"dsn": "v2://dqp:50000/?binary=true"
				}
			}
		},
		"constantgenerator1": {
			"component": "com.sap.util.constantGenerator",
			"metadata": {
				"label": "Constant Generator",
				"x": 16,
				"y": 132,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {
					"mode": "once",
					"duration": "2s",
					"counter": 0,
					"content": "select \"_MessageGateway_TimeMilliseconds\" ,\"value\".\"speed\",  \"value\".\"battery\", \"value\".\"rank\", \"value\".\"user\", \"value\".\"id\"  from \"VORA\".\"CAR_TELEMETRY_COLLECTION\" where \"deviceType\"='AnkiCar'and \"param\"='status' and \"_MessageGateway_TimeMilliseconds\" IS NOT MISSING limit 3000"
				}
			}
		},
		"javascriptoperator2": {
			"component": "com.sap.system.jsengine",
			"metadata": {
				"label": "JavaScript Operator",
				"x": 535.9999990463257,
				"y": 72,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {
					"script": "$.setPortCallback(\"input\",onInput);\n\nfunction onInput(ctx,s) {\n    //$.output(s);\n\n    try {\n        var r = JSON.parse(s);\n    } catch(e) {\n        // fail silently on invalid JSON string\n        return;\n    }\n    if(!r.Success)\n        return;\n    if(r.Data === null)\n        return;\n    \n    var out = \"\";\n    for(var i = 0; i < r.Data.length; ++i) {\n        \n        if(i === 0)\n            out += \"speed, battery, rank, user, timest, id\\n\" ;\n            \n        var row = r.Data[i];\n        for(var col in row){\n         if(row[col] === 'null')\n           row[col] = 0\n            \n        }   \n\n    var raceTestRun = new String(row['value.user']);\n    raceTestRun = raceTestRun.replace(/\"/g,\"\");\n    \n    if(raceTestRun === \"AI Driver\") {\n        raceTestRun = \"Race 1 Break Overheat\";\n        \n    }   else\n    if(raceTestRun === \"controller\") {\n        raceTestRun = \"Race 2 break exhaust\";\n        \n    } else\n     if(raceTestRun === \"chris\") {\n        raceTestRun = \"Race 3\";\n        \n    } else\n    if(raceTestRun === \"xxxx\") {\n        raceTestRun = \"Race  4\";\n        \n    } \n    \n    \n\n  \n        \n        \n            out += row['value.speed'] + \", \" +row['value.battery'] +\", \"+row['value.rank'] +\", \"+raceTestRun +\", \"+row['_MessageGateway_TimeMilliseconds'] +\", \"+row['value.id'] ;\n        out += \"\\n\";\n    }\n    $.output(out);\n    \n}"
				}
			}
		},
		"hdfsproducer1": {
			"component": "com.sap.storage.hdfs.producer",
			"metadata": {
				"label": "HDFS Producer",
				"x": 1071.999997138977,
				"y": 132,
				"height": 80,
				"width": 120,
				"config": {
					"path": "/car_telemetrydata/CarTelemetryStructuredDataExtract.csv",
					"hadoopNamenode": "spark-hdfs-adapter:8020",
					"append": false
				}
			}
		},
		"tomessageconverter1": {
			"component": "com.sap.util.toMessageConverter",
			"metadata": {
				"label": "ToMessage Converter",
				"x": 903.999997138977,
				"y": 132,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"graphterminator1": {
			"component": "com.sap.util.graphTerminator",
			"metadata": {
				"label": "Graph Terminator",
				"x": 1239.999997138977,
				"y": 132,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"12multiplexer1": {
			"component": "com.sap.system.multiplexer.1-2",
			"metadata": {
				"label": "1:2 Multiplexer",
				"x": 719.9999980926514,
				"y": 72,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {}
			}
		},
		"terminal1": {
			"component": "com.sap.util.terminal",
			"metadata": {
				"label": "Terminal",
				"x": 903.999997138977,
				"y": 12,
				"height": 80,
				"width": 120,
				"ui": "dynpath",
				"config": {}
			}
		},
		"12multiplexer2": {
			"component": "com.sap.system.multiplexer.1-2",
			"metadata": {
				"label": "1:2 Multiplexer",
				"x": 352,
				"y": 132,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {}
			}
		},
		"javascriptoperator1": {
			"component": "com.sap.system.jsengine",
			"metadata": {
				"label": "JavaScript Operator",
				"x": 535.9999990463257,
				"y": 192,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {
					"script": "$.setPortCallback(\"input\",onInput);\n\nfunction onInput(ctx,s) {\n    //$.output(s);\n\n    try {\n        var r = JSON.parse(s);\n    } catch(e) {\n        // fail silently on invalid JSON string\n        return;\n    }\n    if(!r.Success)\n        return;\n    if(r.Data === null)\n        return;\n    \n    var out = \"\";\n    for(var i = 0; i < r.Data.length; ++i) {\n        \n     //.replace(\"\\\"\", \"\")\n        var row = r.Data[i];\n        for(var col in row){\n         if(row[col] === 'null')\n           row[col] = 0\n            \n        }    \n\n var raceTestRun = new String(row['value.user']);\n    raceTestRun = raceTestRun.replace(/\"/g,\"\");\n    \n    if(raceTestRun === \"AI Driver\") {\n        raceTestRun = \"Test Stand Break Overheat\";\n        \n    }   else\n    if(raceTestRun === \"controller\") {\n        raceTestRun = \"Test Stand Battery Voltage lost\";\n        \n    } else\n     if(raceTestRun === \"chris\") {\n        raceTestRun = \"Test Stand Wear over time gearbox\";\n        \n    } else\n    if(raceTestRun === \"xxxx\") {\n        raceTestRun = \"Test Stand High Acceleration Torque fail\";\n        \n    } \n    \n  \n        \n        \n            out += row['value.speed'] + \", \" +row['value.battery'] +\", \"+row['value.rank'] +\", \"+raceTestRun +\", \"+row['_MessageGateway_TimeMilliseconds'] +\", \"+row['value.id'] ;\n\n\n        out += \"\\n\";\n    }\n    $.output(out);\n    \n}"
				}
			}
		},
		"tomessageconverter2": {
			"component": "com.sap.util.toMessageConverter",
			"metadata": {
				"label": "ToMessage Converter",
				"x": 719.9999980926514,
				"y": 192,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"hdfsproducer2": {
			"component": "com.sap.storage.hdfs.producer",
			"metadata": {
				"label": "HDFS Producer",
				"x": 903.999997138977,
				"y": 252,
				"height": 80,
				"width": 120,
				"config": {
					"hadoopNamenode": "spark-hdfs-adapter:8020",
					"path": "/car_telemetry_solution/CarTelemetryStructuredTrainingData.csv",
					"append": false
				}
			}
		}
	},
	"groups": [],
	"connections": [
		{
			"metadata": {
				"points": "1027.999997138977,172 1067.999997138977,172"
			},
			"src": {
				"port": "out",
				"process": "tomessageconverter1"
			},
			"tgt": {
				"port": "inFile",
				"process": "hdfsproducer1"
			}
		},
		{
			"metadata": {
				"points": "1195.999997138977,172 1235.999997138977,172"
			},
			"src": {
				"port": "outFilename",
				"process": "hdfsproducer1"
			},
			"tgt": {
				"port": "stop",
				"process": "graphterminator1"
			}
		},
		{
			"metadata": {
				"points": "140,172 180,172"
			},
			"src": {
				"port": "out",
				"process": "constantgenerator1"
			},
			"tgt": {
				"port": "insql",
				"process": "sapvoraclient1"
			}
		},
		{
			"metadata": {
				"points": "659.9999990463257,112 715.9999980926514,112"
			},
			"src": {
				"port": "output",
				"process": "javascriptoperator2"
			},
			"tgt": {
				"port": "in1",
				"process": "12multiplexer1"
			}
		},
		{
			"metadata": {
				"points": "843.9999980926514,121 871.9999976158142,121 871.9999976158142,163 899.999997138977,163"
			},
			"src": {
				"port": "out2",
				"process": "12multiplexer1"
			},
			"tgt": {
				"port": "inbody",
				"process": "tomessageconverter1"
			}
		},
		{
			"metadata": {
				"points": "843.9999980926514,103 871.9999976158142,103 871.9999976158142,52 899.999997138977,52"
			},
			"src": {
				"port": "out1",
				"process": "12multiplexer1"
			},
			"tgt": {
				"port": "in1",
				"process": "terminal1"
			}
		},
		{
			"metadata": {
				"points": "308,172 348,172"
			},
			"src": {
				"port": "outresult",
				"process": "sapvoraclient1"
			},
			"tgt": {
				"port": "in1",
				"process": "12multiplexer2"
			}
		},
		{
			"metadata": {
				"points": "476,163 503.99999952316284,163 503.99999952316284,112 531.9999990463257,112"
			},
			"src": {
				"port": "out1",
				"process": "12multiplexer2"
			},
			"tgt": {
				"port": "input",
				"process": "javascriptoperator2"
			}
		},
		{
			"metadata": {
				"points": "476,181 503.99999952316284,181 503.99999952316284,232 531.9999990463257,232"
			},
			"src": {
				"port": "out2",
				"process": "12multiplexer2"
			},
			"tgt": {
				"port": "input",
				"process": "javascriptoperator1"
			}
		},
		{
			"metadata": {
				"points": "659.9999990463257,232 687.9999985694885,232 687.9999985694885,223 715.9999980926514,223"
			},
			"src": {
				"port": "output",
				"process": "javascriptoperator1"
			},
			"tgt": {
				"port": "inbody",
				"process": "tomessageconverter2"
			}
		},
		{
			"metadata": {
				"points": "843.9999980926514,232 871.9999976158142,232 871.9999976158142,292 899.999997138977,292"
			},
			"src": {
				"port": "out",
				"process": "tomessageconverter2"
			},
			"tgt": {
				"port": "inFile",
				"process": "hdfsproducer2"
			}
		}
	],
	"inports": {},
	"outports": {}
}