{
	"properties": {},
	"description": "R Training Telemetry",
	"processes": {
		"headerremover1": {
			"component": "com.sap.util.headerRemover",
			"metadata": {
				"label": "Header Remover",
				"x": -1234,
				"y": -333,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"tostringconverter1": {
			"component": "com.sap.util.toStringConverter",
			"metadata": {
				"label": "ToString Converter",
				"x": -1036,
				"y": -334,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"streamtostringconverter2": {
			"component": "com.sap.util.streamToStringConverter",
			"metadata": {
				"label": "StreamToString Converter",
				"x": 23,
				"y": -155,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"stringtostreamconverter1": {
			"component": "com.sap.util.stringToStreamConverter",
			"metadata": {
				"label": "StringToStream Converter",
				"x": 19,
				"y": -387,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"createbatch1": {
			"component": "com.sap.ml.util.dataBatcher",
			"metadata": {
				"label": "Create Batch",
				"x": 19,
				"y": -499,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {
					"script": "var batch_size = 50;\nvar counter = 0;\nvar batch = \"\";\n\n$.setPortCallback(\"input\",onInput);\n\nfunction onInput(ctx,input) {\n    counter++;\n    if(counter < batch_size){\n        batch = batch + input + \"\\n\";\n    }else{\n        $.output(batch);  \n        batch=\"\";\n        counter=0;\n    }\n}\n\n"
				}
			}
		},
		"constantgenerator2": {
			"component": "com.sap.util.constantGenerator",
			"metadata": {
				"label": "Constant Generator",
				"x": 275,
				"y": -482,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {
					"content": "{\"description\":\"IRIS data classification\"}",
					"duration": "10s",
					"mode": "pulse"
				}
			}
		},
		"blobproducer1": {
			"component": "com.sap.blob.producer",
			"metadata": {
				"label": "Model Producer",
				"x": 279,
				"y": -359,
				"height": 114,
				"width": 120,
				"config": {
					"blobName": "com.sap.ml.models.R.telemetry.knn",
					"blobType": "model",
					"blobVersion": "firstVersion"
				}
			}
		},
		"terminal1": {
			"component": "com.sap.util.terminal",
			"metadata": {
				"label": "Terminal",
				"x": 279,
				"y": -190,
				"height": 80,
				"width": 120,
				"ui": "dynpath",
				"config": {}
			}
		},
		"rtelemtryoperator1": {
			"component": "R-TelemtryOperator",
			"metadata": {
				"label": "R-TelemtryOperator",
				"x": 19,
				"y": -275,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {}
			}
		},
		"12multiplexer3": {
			"component": "com.sap.system.multiplexer.1-2",
			"metadata": {
				"label": "1:2 Multiplexer",
				"x": 266,
				"y": -596,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {}
			}
		},
		"terminal5": {
			"component": "com.sap.util.terminal",
			"metadata": {
				"label": "Terminal",
				"x": 266,
				"y": -693,
				"height": 80,
				"width": 120,
				"ui": "dynpath",
				"config": {}
			}
		},
		"prunefaultylines1": {
			"component": "com.sap.ml.util.pruneMissing",
			"metadata": {
				"label": "Prune Faulty Lines",
				"x": -609,
				"y": -245,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {
					"script": "$.setPortCallback(\"input\",onInput);\n\nfunction onInput(ctx,input) {\n    var line_items = input.split(\",\");\n    is_clean = !isNaN(parseFloat(line_items[0])) && !isNaN(parseFloat(line_items[1])) &&\n            !isNaN(parseFloat(line_items[2])) \n    if(is_clean){\n        $.output(input);        \n    }    \n}\n"
				}
			}
		},
		"chunkdata1": {
			"component": "com.sap.ml.util.dataChunker",
			"metadata": {
				"label": "Chunk Data",
				"x": -617,
				"y": -459,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {
					"script": "var index = 0;\nvar stack = [];\n\n$.setPortCallback(\"input\",onInput);\n\nfunction onInput(ctx,s) {\n    stack = s.split(/[\\r\\n]+/);\n    $.setInputPortStatus(\"input\",false)  \n    index = stack.length;\n}\n\n$.addTimer(\"55ms\",function(ctx){\n    index--;\n    if(index == -1){\n        $.setInputPortStatus(\"input\",true);\n        index--;\n    } else if (index >= 0){\n        $.output(stack[index]);        \n    }\n})\n"
				}
			}
		},
		"terminal3": {
			"component": "com.sap.util.terminal",
			"metadata": {
				"label": "Terminal",
				"x": -371,
				"y": -467,
				"height": 80,
				"width": 120,
				"ui": "dynpath",
				"config": {}
			}
		},
		"12multiplexer2": {
			"component": "com.sap.system.multiplexer.1-2",
			"metadata": {
				"label": "1:2 Multiplexer",
				"x": -613,
				"y": -347,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {}
			}
		},
		"12multiplexer1": {
			"component": "com.sap.system.multiplexer.1-2",
			"metadata": {
				"label": "1:2 Multiplexer",
				"x": -605,
				"y": -142,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {}
			}
		},
		"terminal2": {
			"component": "com.sap.util.terminal",
			"metadata": {
				"label": "Terminal",
				"x": -367,
				"y": -245,
				"height": 80,
				"width": 120,
				"ui": "dynpath",
				"config": {}
			}
		},
		"hdfsconsumer1": {
			"component": "com.sap.storage.hdfs.consumer",
			"metadata": {
				"label": "HDFS Consumer",
				"x": -1084,
				"y": -441,
				"height": 80,
				"width": 120,
				"config": {
					"hadoopNamenode": "spark-hdfs-adapter:8020",
					"path": "/car_telemetrydata/CarTelemetryStructuredDataExtract.csv"
				}
			}
		},
		"streamtostringconverter1": {
			"component": "com.sap.util.streamToStringConverter",
			"metadata": {
				"label": "StreamToString Converter",
				"x": 279,
				"y": -97,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"terminal4": {
			"component": "com.sap.util.terminal",
			"metadata": {
				"label": "Terminal",
				"x": 283,
				"y": 1,
				"height": 80,
				"width": 120,
				"ui": "dynpath",
				"config": {}
			}
		}
	},
	"groups": [
		{
			"name": "group1",
			"nodes": [
				"headerremover1",
				"tostringconverter1"
			],
			"metadata": {
				"description": "Load Dataset"
			}
		},
		{
			"name": "group2",
			"nodes": [
				"streamtostringconverter2",
				"stringtostreamconverter1",
				"createbatch1",
				"constantgenerator2",
				"blobproducer1",
				"terminal1",
				"rtelemtryoperator1",
				"12multiplexer3",
				"terminal5"
			],
			"metadata": {
				"description": "Train Model and Push to Repository"
			}
		},
		{
			"name": "group4",
			"nodes": [
				"prunefaultylines1",
				"chunkdata1",
				"terminal3",
				"12multiplexer2",
				"12multiplexer1",
				"terminal2"
			],
			"metadata": {
				"description": "Data Cleansing"
			}
		}
	],
	"connections": [
		{
			"metadata": {
				"points": "-1110,-284 -1075,-284 -1075,-303 -1040,-303"
			},
			"src": {
				"port": "outbody",
				"process": "headerremover1"
			},
			"tgt": {
				"port": "ininterface",
				"process": "tostringconverter1"
			}
		},
		{
			"metadata": {
				"points": "147,-115 211,-115 211,-275 275,-275"
			},
			"src": {
				"port": "out",
				"process": "streamtostringconverter2"
			},
			"tgt": {
				"port": "inBlobPath",
				"process": "blobproducer1"
			}
		},
		{
			"metadata": {
				"points": "399,-442 449,-442 449,-367.5 225,-367.5 225,-293 275,-293"
			},
			"src": {
				"port": "out",
				"process": "constantgenerator2"
			},
			"tgt": {
				"port": "inBlobMetadata",
				"process": "blobproducer1"
			}
		},
		{
			"metadata": {
				"points": "403,-302 453,-302 453,-226 225,-226 225,-150 275,-150"
			},
			"src": {
				"port": "success",
				"process": "blobproducer1"
			},
			"tgt": {
				"port": "in1",
				"process": "terminal1"
			}
		},
		{
			"metadata": {
				"points": "-481,-111 -426,-111 -426,-205 -371,-205"
			},
			"src": {
				"port": "out1",
				"process": "12multiplexer1"
			},
			"tgt": {
				"port": "in1",
				"process": "terminal2"
			}
		},
		{
			"metadata": {
				"points": "-485,-205 -435,-205 -435,-153.5 -659,-153.5 -659,-102 -609,-102"
			},
			"src": {
				"port": "output",
				"process": "prunefaultylines1"
			},
			"tgt": {
				"port": "in1",
				"process": "12multiplexer1"
			}
		},
		{
			"metadata": {
				"points": "-912,-294 -766.5,-294 -766.5,-419 -621,-419"
			},
			"src": {
				"port": "outstring",
				"process": "tostringconverter1"
			},
			"tgt": {
				"port": "input",
				"process": "chunkdata1"
			}
		},
		{
			"metadata": {
				"points": "-481,-93 -233,-93 -233,-459 15,-459"
			},
			"src": {
				"port": "out2",
				"process": "12multiplexer1"
			},
			"tgt": {
				"port": "input",
				"process": "createbatch1"
			}
		},
		{
			"metadata": {
				"points": "-493,-419 -443,-419 -443,-363 -667,-363 -667,-307 -617,-307"
			},
			"src": {
				"port": "output",
				"process": "chunkdata1"
			},
			"tgt": {
				"port": "in1",
				"process": "12multiplexer2"
			}
		},
		{
			"metadata": {
				"points": "-489,-298 -439,-298 -439,-251.5 -663,-251.5 -663,-205 -613,-205"
			},
			"src": {
				"port": "out2",
				"process": "12multiplexer2"
			},
			"tgt": {
				"port": "input",
				"process": "prunefaultylines1"
			}
		},
		{
			"metadata": {
				"points": "-489,-316 -432,-316 -432,-427 -375,-427"
			},
			"src": {
				"port": "out1",
				"process": "12multiplexer2"
			},
			"tgt": {
				"port": "in1",
				"process": "terminal3"
			}
		},
		{
			"metadata": {
				"points": "-960,-392 -910,-392 -910,-342.5 -1288,-342.5 -1288,-293 -1238,-293"
			},
			"src": {
				"port": "outFile",
				"process": "hdfsconsumer1"
			},
			"tgt": {
				"port": "in",
				"process": "headerremover1"
			}
		},
		{
			"metadata": {
				"points": "143,-459 202.5,-459 202.5,-556 262,-556"
			},
			"src": {
				"port": "output",
				"process": "createbatch1"
			},
			"tgt": {
				"port": "in1",
				"process": "12multiplexer3"
			}
		},
		{
			"metadata": {
				"points": "390,-547 440,-547 440,-447 -35,-447 -35,-347 15,-347"
			},
			"src": {
				"port": "out2",
				"process": "12multiplexer3"
			},
			"tgt": {
				"port": "in",
				"process": "stringtostreamconverter1"
			}
		},
		{
			"metadata": {
				"points": "390,-565 440,-565 440,-609 212,-609 212,-653 262,-653"
			},
			"src": {
				"port": "out1",
				"process": "12multiplexer3"
			},
			"tgt": {
				"port": "in1",
				"process": "terminal5"
			}
		},
		{
			"metadata": {
				"points": "143,-347 193,-347 193,-291 -35,-291 -35,-235 15,-235"
			},
			"src": {
				"port": "out",
				"process": "stringtostreamconverter1"
			},
			"tgt": {
				"port": "stdin",
				"process": "rtelemtryoperator1"
			}
		},
		{
			"metadata": {
				"points": "143,-244 193,-244 193,-179.5 -31,-179.5 -31,-115 19,-115"
			},
			"src": {
				"port": "stdout",
				"process": "rtelemtryoperator1"
			},
			"tgt": {
				"port": "in",
				"process": "streamtostringconverter2"
			}
		},
		{
			"metadata": {
				"points": "143,-226 209,-226 209,-57 275,-57"
			},
			"src": {
				"port": "stderr",
				"process": "rtelemtryoperator1"
			},
			"tgt": {
				"port": "in",
				"process": "streamtostringconverter1"
			}
		},
		{
			"metadata": {
				"points": "403,-57 453,-57 453,-8 229,-8 229,41 279,41"
			},
			"src": {
				"port": "out",
				"process": "streamtostringconverter1"
			},
			"tgt": {
				"port": "in1",
				"process": "terminal4"
			}
		}
	],
	"inports": {},
	"outports": {}
}